{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sijialiu\\\\Documents\\\\CSCE315\\\\test\\\\p3\\\\src\\\\components\\\\Input.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n// blocks take inputs from users\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Input = props => {\n  _s();\n  const {\n    label,\n    value,\n    onChange,\n    type\n  } = props;\n  const [visible, setVisible] = useState(true);\n  // take the inputs, for type such if it is text, it will show the inputs\n  const getType = () => {\n    if (!type) return 'text';\n    return type;\n  };\n  const baseClasses = () => {\n    return 'w-full outline-none h-full rounded-[5px] pl-[15px] border transition-all focus:border-blue-500 focus:shadow-md';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex mb-[12px] items-center h-[40px] relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-left mr-[7px] min-w-[120px]\",\n      children: [label, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: type,\n      className: baseClasses(),\n      value: value,\n      onChange: e => onChange(e)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 9\n  }, this);\n};\n_s(Input, \"LdKhoqwM5nNaI2S3nj04mF2NyjI=\");\n_c = Input;\nexport default Input;\nvar _c;\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useState","Input","props","label","value","onChange","type","visible","setVisible","getType","baseClasses","e"],"sources":["C:/Users/sijialiu/Documents/CSCE315/test/p3/src/components/Input.jsx"],"sourcesContent":["import React,{useState} from 'react'\n\n\n// blocks take inputs from users\nconst Input = (props) => {\n    const { label, value, onChange, type } = props;\n    const [visible,setVisible] = useState(true);\n    // take the inputs, for type such if it is text, it will show the inputs\n    const getType = () => {\n        if(!type)\n            return 'text'\n        return type\n    }\n\n    const baseClasses = () => {\n        return 'w-full outline-none h-full rounded-[5px] pl-[15px] border transition-all focus:border-blue-500 focus:shadow-md'\n    }\n    return (\n        <div className=\"flex mb-[12px] items-center h-[40px] relative\">\n            <p className=\"text-left mr-[7px] min-w-[120px]\">{label}:</p>\n            <input type={type} className={baseClasses()} value={value} onChange={e => onChange(e)}/>\n            {/* <input type={visible? 'text': 'password'} className={baseClasses()} value={value} onChange={e => onChange(e)}/> */}\n            {/* {getType() == 'password' &&  <div className=\"absolute right-[10px] top-[50%] translate-y-[-50%]\" onClick={() => setVisible(!visible)}>\n                { visible? <HiEye size={20} color=\"gray\"/>: <HiEyeOff size={20} color=\"gray\"/> }\n            </div>} */}\n        </div>\n    )\n}\n\nexport default Input"],"mappings":";;AAAA,OAAOA,KAAK,IAAEC,QAAQ,QAAO,OAAO;;AAGpC;AAAA;AACA,MAAMC,KAAK,GAAIC,KAAK,IAAK;EAAA;EACrB,MAAM;IAAEC,KAAK;IAAEC,KAAK;IAAEC,QAAQ;IAAEC;EAAK,CAAC,GAAGJ,KAAK;EAC9C,MAAM,CAACK,OAAO,EAACC,UAAU,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAC3C;EACA,MAAMS,OAAO,GAAG,MAAM;IAClB,IAAG,CAACH,IAAI,EACJ,OAAO,MAAM;IACjB,OAAOA,IAAI;EACf,CAAC;EAED,MAAMI,WAAW,GAAG,MAAM;IACtB,OAAO,gHAAgH;EAC3H,CAAC;EACD,oBACI;IAAK,SAAS,EAAC,+CAA+C;IAAA,wBAC1D;MAAG,SAAS,EAAC,kCAAkC;MAAA,WAAEP,KAAK;IAAA;MAAA;MAAA;MAAA;IAAA,QAAM,eAC5D;MAAO,IAAI,EAAEG,IAAK;MAAC,SAAS,EAAEI,WAAW,EAAG;MAAC,KAAK,EAAEN,KAAM;MAAC,QAAQ,EAAEO,CAAC,IAAIN,QAAQ,CAACM,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAE;EAAA;IAAA;IAAA;IAAA;EAAA,QAKtF;AAEd,CAAC;AAAA,GAvBKV,KAAK;AAAA,KAALA,KAAK;AAyBX,eAAeA,KAAK;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}